{"ast":null,"code":"var _jsxFileName = \"/Users/makennalehnert/Thinkful/pomodoro-project/src/pomodoro/MainSessionDisplay.js\";\nimport React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nexport default function MainSessionDisplay({\n  session,\n  focusDuration,\n  breakDuration\n}) {\n  return session && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, \" for \", \" \", session.label === \"Focusing\" ? minutesToDuration(focusDuration) : minutesToDuration(breakDuration), \" \", \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": 100 - 100 * session.timeRemaining / (session.label === \"Focusing\" ? focusDuration * 60 : breakDuration * 60),\n    style: {\n      width: `${100 - 100 * session.timeRemaining / (session.label === \"Focusing\" ? focusDuration * 60 : breakDuration * 60)}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/makennalehnert/Thinkful/pomodoro-project/src/pomodoro/MainSessionDisplay.js"],"names":["React","minutesToDuration","secondsToDuration","MainSessionDisplay","session","focusDuration","breakDuration","label","timeRemaining","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;AAGA,eAAe,SAASC,kBAAT,CAA4B;AAACC,EAAAA,OAAD;AAAUC,EAAAA,aAAV;AAAyBC,EAAAA;AAAzB,CAA5B,EAAsE;AAGjF,SACIF,OAAO,iBACP,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OADH,aACGA,OADH,uBACGA,OAAO,CAAEG,KADZ,WACwB,GADxB,EAEGH,OAAO,CAACG,KAAR,KAAkB,UAAlB,GACCN,iBAAiB,CAACI,aAAD,CADlB,GAECJ,iBAAiB,CAACK,aAAD,CAJrB,EAKI,GALJ,aAFF,eAUE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,iBAAiB,CAACE,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEI,aAAV,CADpB,eAVF,CADF,CAFA,eAkBA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBACI,MAAO,MAAML,OAAO,CAACI,aAAf,IACLJ,OAAO,CAACG,KAAR,KAAkB,UAAlB,GACCF,aAAa,GAAG,EADjB,GACsBC,aAAa,GAAG,EAFjC,CANZ;AAWE,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAG,GAAE,MAAO,MAAMN,OAAO,CAACI,aAAf,IACxBJ,OAAO,CAACG,KAAR,KAAkB,UAAlB,GAA+BF,aAAa,GAAG,EAA/C,GAAoDC,aAAa,GAAG,EAD5C,CACgD;AADlE,KAXT,CAaK;AAbL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAlBA,CADA,CAFJ;AA6CH","sourcesContent":["import React from \"react\"\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\"\n\n\nexport default function MainSessionDisplay({session, focusDuration, breakDuration }) {\n\n\n    return (\n        session && \n        <>\n        <div>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n            <h2 data-testid=\"session-title\">\n              {session?.label} for {\" \"}\n              {session.label === \"Focusing\"\n              ? minutesToDuration(focusDuration)\n              : minutesToDuration(breakDuration)\n              }{\" \"} minutes\n            </h2>\n            {/* TODO: Update message below correctly format the time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration(session?.timeRemaining)} remaining\n            </p>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={\n                    100 - (100 * session.timeRemaining) /\n                    (session.label === \"Focusing\"\n                    ? focusDuration * 60 : breakDuration * 60)\n                    \n                }\n                style={{ width: `${100 - (100 * session.timeRemaining) /\n                (session.label === \"Focusing\" ? focusDuration * 60 : breakDuration * 60)}%`\n                }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>  \n      </div>\n      </>\n    )\n}"]},"metadata":{},"sourceType":"module"}